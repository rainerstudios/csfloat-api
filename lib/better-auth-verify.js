/**
 * Better Auth Token Verification
 * Verifies JWT tokens generated by Better Auth in the frontend
 */

const jwt = require('jsonwebtoken');

// This should match your Better Auth JWT secret in frontend
const JWT_SECRET = process.env.BETTER_AUTH_SECRET || process.env.JWT_SECRET || 'cs2float-secret-key-change-in-production';

/**
 * Middleware to verify Better Auth JWT tokens
 */
function verifyBetterAuthToken(req, res, next) {
    // Check for token in multiple places
    const token = req.headers.authorization?.replace('Bearer ', '') ||
                  req.headers['x-auth-token'] ||
                  req.query.token ||
                  req.cookies?.token;  // Better Auth typically uses 'token' cookie name

    if (!token) {
        return res.status(401).json({
            success: false,
            error: 'Authentication required',
            message: 'No authentication token provided'
        });
    }

    try {
        // Verify the JWT token
        const decoded = jwt.verify(token, JWT_SECRET);

        // Add user info to request
        req.user = {
            steam_id: decoded.steam_id || decoded.steamId || decoded.id,
            username: decoded.username || decoded.name,
            avatar: decoded.avatar,
            ...decoded
        };

        next();
    } catch (error) {
        console.error('Token verification failed:', error.message);
        return res.status(401).json({
            success: false,
            error: 'Invalid token',
            message: 'Authentication token is invalid or expired'
        });
    }
}

/**
 * Optional middleware - doesn't fail if no token
 */
function optionalAuth(req, res, next) {
    const token = req.headers.authorization?.replace('Bearer ', '') ||
                  req.headers['x-auth-token'] ||
                  req.query.token ||
                  req.cookies?.token;

    if (token) {
        try {
            const decoded = jwt.verify(token, JWT_SECRET);
            req.user = {
                steam_id: decoded.steam_id || decoded.steamId || decoded.id,
                username: decoded.username || decoded.name,
                avatar: decoded.avatar,
                ...decoded
            };
        } catch (error) {
            // Token invalid, but continue anyway
            req.user = null;
        }
    }

    next();
}

module.exports = {
    verifyBetterAuthToken,
    optionalAuth,
    JWT_SECRET
};
